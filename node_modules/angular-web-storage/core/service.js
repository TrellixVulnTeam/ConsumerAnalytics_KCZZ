var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { Injectable } from '@angular/core';
import { StorageUtil } from './util';
var StorageService = (function () {
    function StorageService(storage) {
        this.storage = storage;
    }
    StorageService.prototype.get = function (key) {
        return StorageUtil.get(this.storage, key);
    };
    StorageService.prototype.set = function (key, value, expiredAt, expiredUnit) {
        if (expiredAt === void 0) { expiredAt = 0; }
        if (expiredUnit === void 0) { expiredUnit = 'd'; }
        return StorageUtil.set(this.storage, key, value, expiredAt, expiredUnit);
    };
    StorageService.prototype.remove = function (key) {
        StorageUtil.remove(this.storage, key);
    };
    StorageService.prototype.clear = function () {
        this.storage.clear();
    };
    return StorageService;
}());
export { StorageService };
var LocalStorageService = (function (_super) {
    __extends(LocalStorageService, _super);
    function LocalStorageService() {
        return _super.call(this, localStorage) || this;
    }
    return LocalStorageService;
}(StorageService));
export { LocalStorageService };
LocalStorageService.decorators = [
    { type: Injectable },
];
/** @nocollapse */
LocalStorageService.ctorParameters = function () { return []; };
var SessionStorageService = (function (_super) {
    __extends(SessionStorageService, _super);
    function SessionStorageService() {
        return _super.call(this, sessionStorage) || this;
    }
    return SessionStorageService;
}(StorageService));
export { SessionStorageService };
SessionStorageService.decorators = [
    { type: Injectable },
];
/** @nocollapse */
SessionStorageService.ctorParameters = function () { return []; };
//# sourceMappingURL=service.js.map